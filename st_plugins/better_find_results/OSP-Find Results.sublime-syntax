%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
# https://github.com/aziz/BetterFindBuffer
# Copyright (c) 2014 Allen Bargi (https://twitter.com/aziz)

# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in the
# Software without restriction, including without limitation the rights to use, copy,
# modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so, subject to the
# following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
# PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
# USE OR OTHER DEALINGS IN THE SOFTWARE.
name: Find Results
scope: text.find-in-files
hidden: true
contexts:
    main:
        - match: '^([^ ].*:\n)$'
          captures:
              1: entity.name.filename.find-in-files
        - match: "^( +[0-9]+) "
          captures:
              1: constant.numeric.line-number.find-in-files
        - match: '^( +[0-9]+)(:)(.+\n)$'
          captures:
              1: constant.numeric.line-number.match.find-in-files
              2: punctuation.line-number.match.find-in-files
              3: match.find-in-files
        - match: '^ +(\.{2,10}+)$'
          captures:
              1: constant.numeric.line-number.find-in-files
        - match: ^Searching (\d+) file(?:s)? for (".+")(.+)?$
          scope: header.find-in-files
          captures:
              1: variable.total_files_count.find-in-files
              2: string.query.find-in-files
        - match: ^(\d+) match(?:es)? (?:across|in) (\d+) file(?:s)?\n
          scope: footer.find-in-files
          captures:
              1: variable.matched_count.find-in-files
              2: variable.matched_files_count.find-in-files
              3: sep.find-in-files
        - match: ^(0) matches\n
          scope: footer.find-in-files
          captures:
              1: variable.no_matches.find-in-files
        - match: ^(0) matches
          captures:
              1: variable.no_matches.find-in-files
        - match: ^ (ERROR:)
          captures:
              1: constant.other.find-in-files
